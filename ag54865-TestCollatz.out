==326== Memcheck, a memory error detector
==326== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==326== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==326== Command: ./TestCollatz
==326==
Running main() from gtest_main.cc
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (20 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6_Reverse
[       OK ] CollatzFixture.eval_6_Reverse (3 ms)
[ RUN      ] CollatzFixture.eval_7_Same
[       OK ] CollatzFixture.eval_7_Same (2 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (2 ms)
[ RUN      ] CollatzFixture.eval_9
[       OK ] CollatzFixture.eval_9 (2 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (8 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (2 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (5 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (3 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (3 ms)
[----------] 16 tests from CollatzFixture (97 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (149 ms total)
[  PASSED  ] 16 tests.
==326==
==326== HEAP SUMMARY:
==326==     in use at exit: 72,704 bytes in 1 blocks
==326==   total heap usage: 286 allocs, 285 frees, 140,350 bytes allocated
==326==
==326== LEAK SUMMARY:
==326==    definitely lost: 0 bytes in 0 blocks
==326==    indirectly lost: 0 bytes in 0 blocks
==326==      possibly lost: 0 bytes in 0 blocks
==326==    still reachable: 72,704 bytes in 1 blocks
==326==         suppressed: 0 bytes in 0 blocks
==326== Rerun with --leak-check=full to see details of leaked memory
==326==
==326== For counts of detected and suppressed errors, rerun with: -v
==326== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 41
Branches executed:100.00% of 32
Taken at least once:78.13% of 32
Calls executed:87.50% of 16
Creating 'Collatz.c++.gcov'
