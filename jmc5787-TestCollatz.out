==477== Memcheck, a memory error detector
==477== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==477== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==477== Command: ./TestCollatz
==477==
Running main() from gtest_main.cc
[==========] Running 18 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 18 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (30 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (6 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (6 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (3 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (9 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (48 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (10 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (4 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (4 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (8 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (36 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (30 ms)
[ RUN      ] CollatzFixture.solve_42
[       OK ] CollatzFixture.solve_42 (6 ms)
[----------] 18 tests from CollatzFixture (264 ms total)

[----------] Global test environment tear-down
[==========] 18 tests from 1 test case ran. (342 ms total)
[  PASSED  ] 18 tests.
==477==
==477== HEAP SUMMARY:
==477==     in use at exit: 72,704 bytes in 1 blocks
==477==   total heap usage: 307 allocs, 306 frees, 144,342 bytes allocated
==477==
==477== LEAK SUMMARY:
==477==    definitely lost: 0 bytes in 0 blocks
==477==    indirectly lost: 0 bytes in 0 blocks
==477==      possibly lost: 0 bytes in 0 blocks
==477==    still reachable: 72,704 bytes in 1 blocks
==477==         suppressed: 0 bytes in 0 blocks
==477== Rerun with --leak-check=full to see details of leaked memory
==477==
==477== For counts of detected and suppressed errors, rerun with: -v
==477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:97.50% of 40
Branches executed:100.00% of 28
Taken at least once:82.14% of 28
Calls executed:100.00% of 15
Creating 'Collatz.c++.gcov'
Collatz.c++ found
Collatz.h found
Collatz.log found
html found
RunCollatz.c++ found
RunCollatz.in found
RunCollatz.out found
TestCollatz.c++ found
TestCollatz.out found
success
