==64== Memcheck, a memory error detector
==64== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==64== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==64== Command: ./TestCollatz
==64== 
Running main() from gtest_main.cc
[==========] Running 19 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 19 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (21 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (4 ms)
[ RUN      ] CollatzFixture.collatz_helper_1
[       OK ] CollatzFixture.collatz_helper_1 (2 ms)
[ RUN      ] CollatzFixture.collatz_helper_2
[       OK ] CollatzFixture.collatz_helper_2 (3 ms)
[ RUN      ] CollatzFixture.collatz_helper_3
[       OK ] CollatzFixture.collatz_helper_3 (2 ms)
[ RUN      ] CollatzFixture.collatz_helper_optimized_1
[       OK ] CollatzFixture.collatz_helper_optimized_1 (2 ms)
[ RUN      ] CollatzFixture.collatz_helper_optimized_2
[       OK ] CollatzFixture.collatz_helper_optimized_2 (3 ms)
[ RUN      ] CollatzFixture.collatz_helper_optimized_3
[       OK ] CollatzFixture.collatz_helper_optimized_3 (2 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (3 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (7 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (5 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (22 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (9 ms)
[----------] 19 tests from CollatzFixture (113 ms total)

[----------] Global test environment tear-down
[==========] 19 tests from 1 test case ran. (179 ms total)
[  PASSED  ] 19 tests.
==64== 
==64== HEAP SUMMARY:
==64==     in use at exit: 72,704 bytes in 1 blocks
==64==   total heap usage: 330 allocs, 329 frees, 145,778 bytes allocated
==64== 
==64== LEAK SUMMARY:
==64==    definitely lost: 0 bytes in 0 blocks
==64==    indirectly lost: 0 bytes in 0 blocks
==64==      possibly lost: 0 bytes in 0 blocks
==64==    still reachable: 72,704 bytes in 1 blocks
==64==         suppressed: 0 bytes in 0 blocks
==64== Rerun with --leak-check=full to see details of leaked memory
==64== 
==64== For counts of detected and suppressed errors, rerun with: -v
==64== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:93.02% of 43
Branches executed:100.00% of 36
Taken at least once:83.33% of 36
Calls executed:100.00% of 20
Creating 'Collatz.c++.gcov'
