==79== Memcheck, a memory error detector
==79== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==79== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==79== Command: ./TestCollatz
==79== 
==79== Warning: set address range perms: large range [0x665000, 0x183e1000) (defined)
Running main() from gtest_main.cc
[==========] Running 16 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 16 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (25 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (5 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (5 ms)
[ RUN      ] CollatzFixture.cycle_length_op_1
[       OK ] CollatzFixture.cycle_length_op_1 (4 ms)
[ RUN      ] CollatzFixture.cycle_length_op_2
[       OK ] CollatzFixture.cycle_length_op_2 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_op_3
[       OK ] CollatzFixture.cycle_length_op_3 (5 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (9 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (5 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (5 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (10 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (40 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (5 ms)
[----------] 16 tests from CollatzFixture (168 ms total)

[----------] Global test environment tear-down
[==========] 16 tests from 1 test case ran. (233 ms total)
[  PASSED  ] 16 tests.
==79== 
==79== HEAP SUMMARY:
==79==     in use at exit: 72,704 bytes in 1 blocks
==79==   total heap usage: 298 allocs, 297 frees, 140,668 bytes allocated
==79== 
==79== LEAK SUMMARY:
==79==    definitely lost: 0 bytes in 0 blocks
==79==    indirectly lost: 0 bytes in 0 blocks
==79==      possibly lost: 0 bytes in 0 blocks
==79==    still reachable: 72,704 bytes in 1 blocks
==79==         suppressed: 0 bytes in 0 blocks
==79== Rerun with --leak-check=full to see details of leaked memory
==79== 
==79== For counts of detected and suppressed errors, rerun with: -v
==79== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 53
Branches executed:100.00% of 40
Taken at least once:80.00% of 40
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'
