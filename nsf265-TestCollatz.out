==1382== Memcheck, a memory error detector
==1382== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1382== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1382== Command: ./TestCollatz
==1382== 
Running main() from gtest_main.cc
[==========] Running 35 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 35 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (26 ms)
[ RUN      ] CollatzFixture.read1
[       OK ] CollatzFixture.read1 (4 ms)
[ RUN      ] CollatzFixture.read2
[       OK ] CollatzFixture.read2 (4 ms)
[ RUN      ] CollatzFixture.read3
[       OK ] CollatzFixture.read3 (4 ms)
[ RUN      ] CollatzFixture.read4
[       OK ] CollatzFixture.read4 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (31 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (7 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (8 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (621 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (7 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (4010 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (22 ms)
[ RUN      ] CollatzFixture.eval_help_1
[       OK ] CollatzFixture.eval_help_1 (2 ms)
[ RUN      ] CollatzFixture.eval_help_2
[       OK ] CollatzFixture.eval_help_2 (2 ms)
[ RUN      ] CollatzFixture.eval_help_3
[       OK ] CollatzFixture.eval_help_3 (2 ms)
[ RUN      ] CollatzFixture.eval_help_4
[       OK ] CollatzFixture.eval_help_4 (2 ms)
[ RUN      ] CollatzFixture.eval_opt_1
[       OK ] CollatzFixture.eval_opt_1 (12 ms)
[ RUN      ] CollatzFixture.eval_opt_2
[       OK ] CollatzFixture.eval_opt_2 (36 ms)
[ RUN      ] CollatzFixture.eval_opt_3
[       OK ] CollatzFixture.eval_opt_3 (4 ms)
[ RUN      ] CollatzFixture.eval_opt_4
[       OK ] CollatzFixture.eval_opt_4 (18 ms)
[ RUN      ] CollatzFixture.eval_unopt_1
[       OK ] CollatzFixture.eval_unopt_1 (4 ms)
[ RUN      ] CollatzFixture.eval_unopt_2
[       OK ] CollatzFixture.eval_unopt_2 (9 ms)
[ RUN      ] CollatzFixture.eval_unopt_3
[       OK ] CollatzFixture.eval_unopt_3 (2 ms)
[ RUN      ] CollatzFixture.eval_unopt_4
[       OK ] CollatzFixture.eval_unopt_4 (5 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (8 ms)
[ RUN      ] CollatzFixture.print1
[       OK ] CollatzFixture.print1 (4 ms)
[ RUN      ] CollatzFixture.print2
[       OK ] CollatzFixture.print2 (3 ms)
[ RUN      ] CollatzFixture.print3
[       OK ] CollatzFixture.print3 (3 ms)
[ RUN      ] CollatzFixture.print4
[       OK ] CollatzFixture.print4 (3 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (10 ms)
[ RUN      ] CollatzFixture.solve1
[       OK ] CollatzFixture.solve1 (116 ms)
[ RUN      ] CollatzFixture.solve2
[       OK ] CollatzFixture.solve2 (108 ms)
[ RUN      ] CollatzFixture.solve3
[       OK ] CollatzFixture.solve3 (193 ms)
[ RUN      ] CollatzFixture.solve4
[       OK ] CollatzFixture.solve4 (163 ms)
[----------] 35 tests from CollatzFixture (5516 ms total)

[----------] Global test environment tear-down
[==========] 35 tests from 1 test case ran. (5576 ms total)
[  PASSED  ] 35 tests.
==1382== 
==1382== HEAP SUMMARY:
==1382==     in use at exit: 72,704 bytes in 1 blocks
==1382==   total heap usage: 55,541 allocs, 55,540 frees, 2,375,412 bytes allocated
==1382== 
==1382== LEAK SUMMARY:
==1382==    definitely lost: 0 bytes in 0 blocks
==1382==    indirectly lost: 0 bytes in 0 blocks
==1382==      possibly lost: 0 bytes in 0 blocks
==1382==    still reachable: 72,704 bytes in 1 blocks
==1382==         suppressed: 0 bytes in 0 blocks
==1382== Rerun with --leak-check=full to see details of leaked memory
==1382== 
==1382== For counts of detected and suppressed errors, rerun with: -v
==1382== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 48
Branches executed:100.00% of 30
Taken at least once:83.33% of 30
Calls executed:100.00% of 20
Creating 'Collatz.c++.gcov'