==150== Memcheck, a memory error detector
==150== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==150== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==150== Command: ./TestCollatz
==150==
Running main() from gtest_main.cc
[==========] Running 29 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 29 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (16 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (3 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (3 ms)
[ RUN      ] CollatzFixture.read_4
[       OK ] CollatzFixture.read_4 (3 ms)
[ RUN      ] CollatzFixture.switch_1
[       OK ] CollatzFixture.switch_1 (2 ms)
[ RUN      ] CollatzFixture.switch_2
[       OK ] CollatzFixture.switch_2 (2 ms)
[ RUN      ] CollatzFixture.switch_3
[       OK ] CollatzFixture.switch_3 (2 ms)
[ RUN      ] CollatzFixture.switch_4
[       OK ] CollatzFixture.switch_4 (2 ms)
[ RUN      ] CollatzFixture.calc_1
[       OK ] CollatzFixture.calc_1 (2 ms)
[ RUN      ] CollatzFixture.calc_2
[       OK ] CollatzFixture.calc_2 (1 ms)
[ RUN      ] CollatzFixture.calc_3
[       OK ] CollatzFixture.calc_3 (2 ms)
[ RUN      ] CollatzFixture.calc_4
[       OK ] CollatzFixture.calc_4 (1 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (2 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (1 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (1 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (8 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (15 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (2 ms)
[ RUN      ] CollatzFixture.eval_9
[       OK ] CollatzFixture.eval_9 (15 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (5 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (2 ms)
[ RUN      ] CollatzFixture.print_4
[       OK ] CollatzFixture.print_4 (2 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (4 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (19 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (5 ms)
[ RUN      ] CollatzFixture.solve_4
[       OK ] CollatzFixture.solve_4 (3 ms)
[----------] 29 tests from CollatzFixture (141 ms total)

[----------] Global test environment tear-down
[==========] 29 tests from 1 test case ran. (178 ms total)
[  PASSED  ] 29 tests.
==150==
==150== HEAP SUMMARY:
==150==     in use at exit: 72,704 bytes in 1 blocks
==150==   total heap usage: 386 allocs, 385 frees, 160,636 bytes allocated
==150==
==150== LEAK SUMMARY:
==150==    definitely lost: 0 bytes in 0 blocks
==150==    indirectly lost: 0 bytes in 0 blocks
==150==      possibly lost: 0 bytes in 0 blocks
==150==    still reachable: 72,704 bytes in 1 blocks
==150==         suppressed: 0 bytes in 0 blocks
==150== Rerun with --leak-check=full to see details of leaked memory
==150==
==150== For counts of detected and suppressed errors, rerun with: -v
==150== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:97.56% of 41
Branches executed:100.00% of 28
Taken at least once:82.14% of 28
Calls executed:100.00% of 15
Creating 'Collatz.c++.gcov'