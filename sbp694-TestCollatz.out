==1275== Memcheck, a memory error detector
==1275== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1275== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==1275== Command: ./TestCollatz
==1275== 
Running main() from gtest_main.cc
[==========] Running 14 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 14 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (26 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (3 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (9 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (4 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (8 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (4 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (4 ms)
[----------] 14 tests from CollatzFixture (97 ms total)

[----------] Global test environment tear-down
[==========] 14 tests from 1 test case ran. (157 ms total)
[  PASSED  ] 14 tests.
==1275== 
==1275== HEAP SUMMARY:
==1275==     in use at exit: 72,704 bytes in 1 blocks
==1275==   total heap usage: 272 allocs, 271 frees, 137,525 bytes allocated
==1275== 
==1275== LEAK SUMMARY:
==1275==    definitely lost: 0 bytes in 0 blocks
==1275==    indirectly lost: 0 bytes in 0 blocks
==1275==      possibly lost: 0 bytes in 0 blocks
==1275==    still reachable: 72,704 bytes in 1 blocks
==1275==         suppressed: 0 bytes in 0 blocks
==1275== Rerun with --leak-check=full to see details of leaked memory
==1275== 
==1275== For counts of detected and suppressed errors, rerun with: -v
==1275== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 40
Branches executed:100.00% of 36
Taken at least once:80.56% of 36
Calls executed:100.00% of 13
Creating 'Collatz.c++.gcov'
