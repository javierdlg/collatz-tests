==6485== Memcheck, a memory error detector
==6485== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==6485== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==6485== Command: ./TestCollatz
==6485== 
Running main() from gtest_main.cc
[==========] Running 13 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 13 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (113 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_backwards
[       OK ] CollatzFixture.eval_backwards (5 ms)
[ RUN      ] CollatzFixture.eval_large_number
[       OK ] CollatzFixture.eval_large_number (44 ms)
[ RUN      ] CollatzFixture.eval_one
[       OK ] CollatzFixture.eval_one (2 ms)
[ RUN      ] CollatzFixture.eval_same_number
[       OK ] CollatzFixture.eval_same_number (2 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (38 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (59 ms)
[ RUN      ] CollatzFixture.solve_backwards
[       OK ] CollatzFixture.solve_backwards (106 ms)
[----------] 13 tests from CollatzFixture (626 ms total)

[----------] Global test environment tear-down
[==========] 13 tests from 1 test case ran. (924 ms total)
[  PASSED  ] 13 tests.
==6485== 
==6485== HEAP SUMMARY:
==6485==     in use at exit: 72,704 bytes in 1 blocks
==6485==   total heap usage: 263 allocs, 262 frees, 134,922 bytes allocated
==6485== 
==6485== LEAK SUMMARY:
==6485==    definitely lost: 0 bytes in 0 blocks
==6485==    indirectly lost: 0 bytes in 0 blocks
==6485==      possibly lost: 0 bytes in 0 blocks
==6485==    still reachable: 72,704 bytes in 1 blocks
==6485==         suppressed: 0 bytes in 0 blocks
==6485== Rerun with --leak-check=full to see details of leaked memory
==6485== 
==6485== For counts of detected and suppressed errors, rerun with: -v
==6485== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:97.44% of 39
Branches executed:86.96% of 46
Taken at least once:86.96% of 46
Calls executed:100.00% of 9
Creating 'Collatz.c++.gcov'
