==173== Memcheck, a memory error detector
==173== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==173== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==173== Command: ./TestCollatz
==173== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (30 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (292 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (272 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (269 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (278 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (279 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (276 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (279 ms)
[ RUN      ] CollatzFixture.init_cache_1
[       OK ] CollatzFixture.init_cache_1 (280 ms)
[ RUN      ] CollatzFixture.init_cache_2
[       OK ] CollatzFixture.init_cache_2 (275 ms)
[ RUN      ] CollatzFixture.init_cache_3
[       OK ] CollatzFixture.init_cache_3 (267 ms)
[ RUN      ] CollatzFixture.init_cache_4
[       OK ] CollatzFixture.init_cache_4 (283 ms)
[ RUN      ] CollatzFixture.init_cache_5
[       OK ] CollatzFixture.init_cache_5 (274 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (9 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (1133 ms)
[----------] 15 tests from CollatzFixture (4533 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (4596 ms total)
[  PASSED  ] 15 tests.
==173== 
==173== HEAP SUMMARY:
==173==     in use at exit: 72,704 bytes in 1 blocks
==173==   total heap usage: 269 allocs, 268 frees, 136,652 bytes allocated
==173== 
==173== LEAK SUMMARY:
==173==    definitely lost: 0 bytes in 0 blocks
==173==    indirectly lost: 0 bytes in 0 blocks
==173==      possibly lost: 0 bytes in 0 blocks
==173==    still reachable: 72,704 bytes in 1 blocks
==173==         suppressed: 0 bytes in 0 blocks
==173== Rerun with --leak-check=full to see details of leaked memory
==173== 
==173== For counts of detected and suppressed errors, rerun with: -v
==173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:90.91% of 44
Branches executed:92.86% of 28
Taken at least once:75.00% of 28
Calls executed:100.00% of 14
Creating 'Collatz.c++.gcov'

