==173== Memcheck, a memory error detector
==173== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==173== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==173== Command: ./TestCollatz
==173== 
Running main() from gtest_main.cc
[==========] Running 17 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 17 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (21 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (2 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (1 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (2 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (1 ms)
[ RUN      ] CollatzFixture.eval_9
[       OK ] CollatzFixture.eval_9 (1 ms)
[ RUN      ] CollatzFixture.eval_10
[       OK ] CollatzFixture.eval_10 (2 ms)
[ RUN      ] CollatzFixture.calc
[       OK ] CollatzFixture.calc (2 ms)
[ RUN      ] CollatzFixture.calc_2
[       OK ] CollatzFixture.calc_2 (3 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (7 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (6 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (7 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (187 ms)
[----------] 17 tests from CollatzFixture (268 ms total)

[----------] Global test environment tear-down
[==========] 17 tests from 1 test case ran. (318 ms total)
[  PASSED  ] 17 tests.
==173== 
==173== HEAP SUMMARY:
==173==     in use at exit: 72,704 bytes in 1 blocks
==173==   total heap usage: 293 allocs, 292 frees, 141,152 bytes allocated
==173== 
==173== LEAK SUMMARY:
==173==    definitely lost: 0 bytes in 0 blocks
==173==    indirectly lost: 0 bytes in 0 blocks
==173==      possibly lost: 0 bytes in 0 blocks
==173==    still reachable: 72,704 bytes in 1 blocks
==173==         suppressed: 0 bytes in 0 blocks
==173== Rerun with --leak-check=full to see details of leaked memory
==173== 
==173== For counts of detected and suppressed errors, rerun with: -v
==173== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:97.78% of 45
Branches executed:100.00% of 38
Taken at least once:76.32% of 38
Calls executed:87.50% of 16
Creating 'Collatz.c++.gcov'
